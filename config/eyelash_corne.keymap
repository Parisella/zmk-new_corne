#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Tab {
            bindings = <&kp TAB>;
            key-positions = <24 23>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <24 25 26>;
        };

        BackSlashPipe {
            bindings = <&kp BACKSLASH>;
            key-positions = <8 24 39>;
        };

        Greater {
            bindings = <&kp GREATER_THAN>;
            key-positions = <8 24 46>;
        };

        LessThan {
            bindings = <&kp LESS_THAN>;
            key-positions = <47 9 23>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <23 11>;
        };

        Caret {
            bindings = <&kp CARET>;
            key-positions = <9 23 25>;
        };

        Tick {
            bindings = <&kp GRAVE>;
            key-positions = <7 23>;
        };

        Percent {
            bindings = <&kp PERCENT>;
            key-positions = <8 39>;
        };

        Home {
            bindings = <&kp HOME>;
            key-positions = <9 9 10 8>;
        };

        End {
            bindings = <&kp END>;
            key-positions = <9 10 11>;
        };

        PageUp {
            bindings = <&kp PAGE_UP>;
            key-positions = <22 25>;
        };

        PageDown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <36 39>;
        };

        Exclaim {
            bindings = <&kp EXCLAMATION>;
            key-positions = <8 9 25>;
        };

        DollarSign {
            bindings = <&kp DOLLAR>;
            key-positions = <37 38 25>;
        };

        Equals {
            bindings = <&kp KP_EQUAL>;
            key-positions = <7 8>;
        };

        Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <36 37>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <22 23>;
        };

        Plus {
            bindings = <&kp KP_PLUS>;
            key-positions = <22 23 24>;
        };

        BracketLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 46>;
        };

        BracketRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 46>;
        };

        ParenthesisLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <23 46>;
        };

        ParentheseRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <24 46>;
        };

        BraceLeft {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <37 46>;
        };

        BraceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <38 46>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp DELETE      &kp Q  &kp W  &kp E     &kp R         &kp T                                   &mmv MOVE_UP                     &kp Y      &kp U          &kp I         &kp O    &kp P     &kp ESCAPE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F         &kp G                   &mmv MOVE_LEFT  &mkp MB3        &mmv MOVE_RIGHT  &kp H      &kp J          &kp K         &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp LEFT_ALT    &kp Z  &kp X  &kp C     &kp V         &kp B      &kp SPACE                    &mmv MOVE_DOWN                   &kp N      &kp M          &kp COMMA     &kp DOT  &kp FSLH  &kp LEFT_CONTROL
                              &kp LGUI  &kp LEFT_ALT  &kp SPACE                                                                &kp SPACE  &kp BACKSPACE  &kp LEFT_GUI
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Numbers {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        FLayer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
